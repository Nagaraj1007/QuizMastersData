{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "Nagaraj"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'",
			"defaultValue": "DefaultEndpointsProtocol=https;AccountName=storagenagaraj;EndpointSuffix=core.windows.net;"
		},
		"AzureSqlDatabase4_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase4'"
		},
		"MongoDb1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'MongoDb1'"
		},
		"MongoDb2_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'MongoDb2'"
		},
		"MongoDb1_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "Quiz"
		},
		"MongoDb2_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "test"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable6')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase6",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "FinalQuiz",
					"table": "QuizSets"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable7')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase9",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "code",
						"type": "nvarchar"
					},
					{
						"name": "userID",
						"type": "nvarchar"
					},
					{
						"name": "name",
						"type": "nvarchar"
					},
					{
						"name": "domain",
						"type": "nvarchar"
					},
					{
						"name": "questionName",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "FinalQuiz",
					"table": "QuizSets"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable8')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase10",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "Transformed",
					"table": "table"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable9')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase11",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "Result",
					"table": "Table"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage9",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Lenskart_Contact_Lens_Data.csv",
						"folderPath": "InputFolder",
						"container": "data"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "id",
						"type": "String"
					},
					{
						"name": "image_url",
						"type": "String"
					},
					{
						"name": "image_url_suffix",
						"type": "String"
					},
					{
						"name": "imageUrls",
						"type": "String"
					},
					{
						"name": "product_url",
						"type": "String"
					},
					{
						"name": "occasion",
						"type": "String"
					},
					{
						"name": "suited_for",
						"type": "String"
					},
					{
						"name": "brand_name",
						"type": "String"
					},
					{
						"name": "brand_name_en",
						"type": "String"
					},
					{
						"name": "model_name",
						"type": "String"
					},
					{
						"name": "prices",
						"type": "String"
					},
					{
						"name": "is_tbyb",
						"type": "String"
					},
					{
						"name": "tags",
						"type": "String"
					},
					{
						"name": "color_options",
						"type": "String"
					},
					{
						"name": "totalColorAvailable",
						"type": "String"
					},
					{
						"name": "is_ditto",
						"type": "String"
					},
					{
						"name": "classification",
						"type": "String"
					},
					{
						"name": "specifications",
						"type": "String"
					},
					{
						"name": "wishlistCount",
						"type": "String"
					},
					{
						"name": "purchaseCount",
						"type": "String"
					},
					{
						"name": "avgRating",
						"type": "String"
					},
					{
						"name": "totalNoOfRatings",
						"type": "String"
					},
					{
						"name": "hashtagList",
						"type": "String"
					},
					{
						"name": "offerName",
						"type": "String"
					},
					{
						"name": "clUsage",
						"type": "String"
					},
					{
						"name": "arModelAndroidUrl",
						"type": "String"
					},
					{
						"name": "arModelIOSUrl",
						"type": "String"
					},
					{
						"name": "arModelMsiteAndDesktopUrl",
						"type": "String"
					},
					{
						"name": "arModelOriginalUrl",
						"type": "String"
					},
					{
						"name": "qty",
						"type": "String"
					},
					{
						"name": "subCollection",
						"type": "String"
					},
					{
						"name": "inclusiveText",
						"type": "String"
					},
					{
						"name": "relatedItems",
						"type": "String"
					},
					{
						"name": "isCygnusEnabled",
						"type": "String"
					},
					{
						"name": "isCashbackApplicable",
						"type": "String"
					},
					{
						"name": "searchProductName",
						"type": "String"
					},
					{
						"name": "prescriptionType",
						"type": "String"
					},
					{
						"name": "brand_logo",
						"type": "String"
					},
					{
						"name": "color",
						"type": "String"
					},
					{
						"name": "size",
						"type": "String"
					},
					{
						"name": "width",
						"type": "String"
					},
					{
						"name": "cmsLinkAndroid",
						"type": "String"
					},
					{
						"name": "cmsLinkIos",
						"type": "String"
					},
					{
						"name": "frameColorImage",
						"type": "String"
					},
					{
						"name": "isCombo",
						"type": "String"
					},
					{
						"name": "tryOnImageUrl",
						"type": "String"
					},
					{
						"name": "offer_image",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "quiz_data.json",
						"folderPath": "InputFolder",
						"container": "data"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"code": {
							"type": "string"
						},
						"userID": {
							"type": "string"
						},
						"name": {
							"type": "string"
						},
						"domain": {
							"type": "string"
						},
						"questions": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"questionName": {
										"type": "string"
									},
									"options": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"answer": {
										"type": "string"
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage3",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "quiz_data.json",
						"folderPath": "InputFolder",
						"container": "data"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"code": {
							"type": "string"
						},
						"userID": {
							"type": "string"
						},
						"name": {
							"type": "string"
						},
						"domain": {
							"type": "string"
						},
						"questions": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"questionName": {
										"type": "string"
									},
									"options": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"answer": {
										"type": "string"
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage4",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "quiz_data.json",
						"folderPath": "InputFolder",
						"container": "data"
					}
				},
				"schema": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json4')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage6",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "final_user_data.json",
						"folderPath": "InputFolder",
						"container": "data"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"firstname": {
							"type": "string"
						},
						"lastname": {
							"type": "string"
						},
						"phone": {
							"type": "string"
						},
						"password": {
							"type": "string"
						},
						"results": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"quizName": {
										"type": "string"
									},
									"quizCode": {
										"type": "integer"
									},
									"score": {
										"type": "integer"
									},
									"userId": {
										"type": "string"
									},
									"total": {
										"type": "integer"
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json5')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage7",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "final_user_data.json",
						"folderPath": "InputFolder",
						"container": "data"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"firstname": {
							"type": "string"
						},
						"lastname": {
							"type": "string"
						},
						"phone": {
							"type": "string"
						},
						"password": {
							"type": "string"
						},
						"results": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"quizName": {
										"type": "string"
									},
									"quizCode": {
										"type": "integer"
									},
									"score": {
										"type": "integer"
									},
									"userId": {
										"type": "string"
									},
									"total": {
										"type": "integer"
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]",
					"accountKey": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault1",
							"type": "LinkedServiceReference"
						},
						"secretName": "blob-string"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase4')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase4_connectionString')]"
				},
				"connectVia": {
					"referenceName": "integrationRuntime1",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MongoDb1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "MongoDbV2",
				"typeProperties": {
					"connectionString": "[parameters('MongoDb1_connectionString')]",
					"database": "[parameters('MongoDb1_properties_typeProperties_database')]"
				},
				"connectVia": {
					"referenceName": "integrationRuntime1",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MongoDb2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "MongoDbV2",
				"typeProperties": {
					"connectionString": "[parameters('MongoDb2_connectionString')]",
					"database": "[parameters('MongoDb2_properties_typeProperties_database')]"
				},
				"connectVia": {
					"referenceName": "integrationRuntime1",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline4')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Json5",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable12",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-03-04T12:00:34Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Json5')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/InputFile')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "noc_regions",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "noc_regions.xls",
						"folderPath": "InputFolder",
						"container": "data"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "NOC",
						"type": "String"
					},
					{
						"name": "region",
						"type": "String"
					},
					{
						"name": "notes",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MongoDbV2Collection1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "MongoDb1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "MongoDbV2Collection",
				"schema": [],
				"typeProperties": {
					"collection": "quizdetails"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/MongoDb1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MongoDbV2Collection2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "MongoDb2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "MongoDbV2Collection",
				"schema": [],
				"typeProperties": {
					"collection": "quizsets"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/MongoDb2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OutputFile')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "OutputData.csv",
						"folderPath": "OutputFolder",
						"container": "data"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Lenskart')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DelimitedText1",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable16",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          id as string,",
						"          image_url as string,",
						"          image_url_suffix as string,",
						"          imageUrls as string,",
						"          product_url as string,",
						"          occasion as string,",
						"          suited_for as string,",
						"          brand_name as string,",
						"          brand_name_en as string,",
						"          model_name as string,",
						"          prices as string,",
						"          is_tbyb as string,",
						"          tags as string,",
						"          color_options as string,",
						"          totalColorAvailable as string,",
						"          is_ditto as string,",
						"          classification as string,",
						"          specifications as string,",
						"          wishlistCount as string,",
						"          purchaseCount as string,",
						"          avgRating as string,",
						"          totalNoOfRatings as string,",
						"          hashtagList as string,",
						"          offerName as string,",
						"          clUsage as string,",
						"          arModelAndroidUrl as string,",
						"          arModelIOSUrl as string,",
						"          arModelMsiteAndDesktopUrl as string,",
						"          arModelOriginalUrl as string,",
						"          qty as string,",
						"          subCollection as string,",
						"          inclusiveText as string,",
						"          relatedItems as string,",
						"          isCygnusEnabled as string,",
						"          isCashbackApplicable as string,",
						"          searchProductName as string,",
						"          prescriptionType as string,",
						"          brand_logo as string,",
						"          color as string,",
						"          size as string,",
						"          width as string,",
						"          cmsLinkAndroid as string,",
						"          cmsLinkIos as string,",
						"          frameColorImage as string,",
						"          isCombo as string,",
						"          tryOnImageUrl as string,",
						"          offer_image as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 select(mapColumn(",
						"          id,",
						"          brand_name,",
						"          model_name,",
						"          classification,",
						"          wishlistcount = wishlistCount,",
						"          purchaseCount,",
						"          avgRating,",
						"          qty",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DelimitedText1')]"
			]
		}
	]
}